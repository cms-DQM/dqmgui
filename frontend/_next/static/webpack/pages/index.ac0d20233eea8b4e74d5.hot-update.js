webpackHotUpdate_N_E("pages/index",{

/***/ "./workspaces/offline.ts":
/*!*******************************!*\
  !*** ./workspaces/offline.ts ***!
  \*******************************/
/*! exports provided: summariesWorkspace, workspaces */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"summariesWorkspace\", function() { return summariesWorkspace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"workspaces\", function() { return workspaces; });\nvar summariesWorkspace = [{\n  label: 'Summary',\n  foldersPath: ['Summary'],\n  quickCollections: []\n}, {\n  label: 'Shift',\n  foldersPath: ['00 Shift'],\n  quickCollections: []\n}, {\n  label: 'Info',\n  foldersPath: ['Info'],\n  quickCollections: []\n}, {\n  label: 'Everything',\n  foldersPath: [],\n  quickCollections: []\n}];\nvar triggerWorkspace = [{\n  label: 'L1T',\n  foldersPath: ['L1T'],\n  quickCollections: []\n}, {\n  label: 'L1TEMU',\n  foldersPath: ['L1TEMU'],\n  quickCollections: []\n}, {\n  label: 'HLT',\n  foldersPath: ['HLT'],\n  quickCollections: []\n}];\nvar trackerWorkspace = [{\n  label: 'PixelPhase1',\n  foldersPath: ['PixelPhase1'],\n  quickCollections: ['PixelPhase1/Layouts/000 - PixelPhase1 ReportSummary: Layer or Disk vs subdet', 'PixelPhase1/Layouts/00a - PixelPhase1 FED Occupancy vs Lumi Block', 'PixelPhase1/Layouts/00b - PixelPhase1_Error_Summary', 'PixelPhase1/Layouts/01a - PixelPhase1_Event_Rate', 'PixelPhase1/Layouts/01b - PixelPhase1 DeadROC Summary', 'PixelPhase1/Layouts/01c - PixelPhase1 Cluster Size vs Cluster Eta', 'PixelPhase1/Layouts/02 - PixelPhase1_Digi_ADC_Barrel', 'PixelPhase1/Layouts/03 - PixelPhase1_Digi_ADC_Endcap', 'PixelPhase1/Layouts/04 - PixelPhase1_Cluster_Number', 'PixelPhase1/Layouts/21 - PixelPhase1 Digis: Ladder vs Module barrel summary', 'PixelPhase1/Layouts/22 - PixelPhase1 Clusters: Ladder vs Module barrel summary', 'PixelPhase1/Layouts/28 - PixelPhase1 Digis: BladePanel vs Disk endcap summary', 'PixelPhase1/Layouts/29 - PixelPhase1 Clusters: BladePanel vs Disk endcap summary', 'PixelPhase1/Layouts/31 - ntracks', 'PixelPhase1/Layouts/32 - Charge and size', 'PixelPhase1/Layouts/33a - Cluster on track charge per Inner Ladders', 'PixelPhase1/Layouts/33b - Cluster on track charge per Outer Ladders', 'PixelPhase1/Layouts/33c - Cluster charge (on-track) per Disk', 'PixelPhase1/Layouts/34 -  Ontrack PXLayer', 'PixelPhase1/Layouts/35 - Ontrack Disk', 'PixelPhase1/Layouts/38 - PixelPhase1 Residuals', 'PixelPhase1/Layouts/39a - ClusterSize Vs Eta (OnTrack) inner', 'PixelPhase1/Layouts/39b - ClusterSize Vs Eta (OnTrack) outer', 'PixelPhase1/Layouts/40a - Cluster size (on-track) per Ladders', 'PixelPhase1/Layouts/40b - Cluster size (on-track) per Disk', 'PixelPhase1/Layouts/41a - Dead Channels per ROC per Barrel Layer', 'PixelPhase1/Layouts/41b - Dead Channels per ROC per Forward Ring']\n}, {\n  label: 'Pixel',\n  foldersPath: ['Pixel'],\n  quickCollections: ['Pixel/Layouts/00b - Pixel_Error_Summary', 'Pixel/Layouts/01 - Pixel_FEDOccupancy_Summary', 'Pixel/Layouts/02 - Pixel_Cluster_Summary', 'Pixel/Layouts/03 - Pixel_Track_Summary', 'Pixel/Layouts/05 - Barrel OnTrack cluster positions', 'Pixel/Layouts/06 - Endcap OnTrack cluster positions', 'Pixel/Layouts/07 - Pixel_Digi_Summary', 'Pixel/Layouts/08 - ROC occupancies', 'Pixel/Layouts/09 - Pixel Clusters vs LS']\n}, {\n  label: 'SiStrip',\n  foldersPath: ['SiStrip'],\n  quickCollections: ['SiStrip/Layouts/00 - SiStrip ReportSummary', 'SiStrip/Layouts/01 - FED-Detected Errors Summary', 'SiStrip/Layouts/03 - # of Cluster Trend', 'SiStrip/Layouts/04 - OnTrackCluster (StoN)', 'SiStrip/Layouts/05 - OffTrackCluster (Total Number)', 'SiStrip/Layouts/06a - FED Errors vs FED ID', 'SiStrip/Layouts/29 - Cluster & Digi occupancy per FED']\n}, {\n  label: 'Alignment',\n  foldersPath: null,\n  quickCollections: ['OfflinePV/AlignmentValidation/00 - Vertex and vertex tracks quality', 'OfflinePV/AlignmentValidation/01 - Impact parameters and errors', 'OfflinePV/AlignmentValidation/02 - Impact parameters projections (pT>1 GeV)', 'OfflinePV/AlignmentValidation/03 - Impact parameters projections (pT>10 GeV)', 'PixelPhase1/Layouts/38 - PixelPhase1 Residuals', 'PixelPhase1/Layouts/38aa - Residuals x per Layer', 'PixelPhase1/Layouts/38ab - Residuals y per Layer', 'PixelPhase1/Layouts/38ba - Profile Residuals x PXBarrel', 'PixelPhase1/Layouts/38bb - Profile Residuals y PXBarrel', 'PixelPhase1/Layouts/38ca - Mean Residuals x inner Modules per Layer', 'PixelPhase1/Layouts/38cb - Mean Residuals x outer Modules per Layer', 'PixelPhase1/Layouts/38cc - Mean Residuals y inner Modules per Layer', 'PixelPhase1/Layouts/38cd - Mean Residuals y outer Modules per Layer', 'PixelPhase1/Layouts/38da - Residuals x per Disk', 'PixelPhase1/Layouts/38db - Residuals y per Disk', 'PixelPhase1/Layouts/38e - Profile Residuals PXFoward', 'PixelPhase1/Layouts/38fa - Mean Residuals InnerOuter Modules PXForward', 'PixelPhase1/Layouts/38fb - Mean Residuals pos.neg. Side PXForward', 'SiStrip/Layouts/21 - TIB Residuals', 'SiStrip/Layouts/22 - TOB Residuals', 'SiStrip/Layouts/23 - TID+ Residuals', 'SiStrip/Layouts/24 - TID- Residuals', 'SiStrip/Layouts/25 - TEC+ Residual', 'SiStrip/Layouts/26 - TEC- Residual']\n}];\nvar calorimetersWorkspace = [{\n  label: 'Ecal',\n  foldersPath: ['Ecal', 'EcalBarrel', 'EcalEndcap'],\n  quickCollections: ['Ecal/Layouts/00 Summary', 'Ecal/Layouts/01 Occupancy Summary']\n}, {\n  label: 'EcalPreshower',\n  foldersPath: ['EcalPreshower'],\n  quickCollections: ['EcalPreshower/Layouts/01-IntegritySummary-EcalPreshower', 'EcalPreshower/Layouts/02-GoodRechitOccupancySummary-EcalPreshower', 'EcalPreshower/Layouts/03-GoodRechitEnergySummary-EcalPreshower', 'EcalPreshower/Layouts/04-ESTimingTaskSummary-EcalPreshower', 'EcalPreshower/Layouts/05-ESGain-EcalPreshower']\n}, {\n  label: 'HCAL',\n  foldersPath: ['Hcal', 'Hcal2'],\n  quickCollections: ['Hcal/Layouts/00 Current Summary', 'Hcal/Layouts/01 RAW Bad Quality', 'Hcal/Layouts/02 RAW Bad Quality depth', 'Hcal/Layouts/03 RAW Mismatches', 'Hcal/Layouts/04 DIGI Missing 1LS', 'Hcal/Layouts/05 DIGI Occupancy', 'Hcal/Layouts/06 DIGI Occupancy Total', 'Hcal/Layouts/07 DIGI Occupancy Cut', 'Hcal/Layouts/08 DIGI Timing', 'Hcal/Layouts/09 DIGI Total Charge', 'Hcal/Layouts/10 DIGI Occupancy vs LS', 'Hcal/Layouts/11 DIGI Amplitude vs LS', 'Hcal/Layouts/12 RECO Energy', 'Hcal/Layouts/13 RECO Occupancy', 'Hcal/Layouts/14 RECO Occupancy Cut', 'Hcal/Layouts/15 RECO Timing', 'Hcal/Layouts/16 RECO HBHEabc Timing', 'Hcal/Layouts/17 RECO Timing vs Energy', 'Hcal/Layouts/18 TP Et Correlation', 'Hcal/Layouts/19 TP Et Correlation Ratio', 'Hcal/Layouts/20 TP Et Distribution', 'Hcal/Layouts/21 TP Et Mismatches', 'Hcal/Layouts/22 TP Et Missing', 'Hcal/Layouts/23 TP Et Occupancy']\n}, {\n  label: 'HCALcalib',\n  foldersPath: ['HcalCalib'],\n  quickCollections: ['HcalCalib/Layouts/00 Current Summary', 'HcalCalib/Layouts/01 Pedestal Mean', 'HcalCalib/Layouts/02 Pedestal Mean by FED', 'HcalCalib/Layouts/03 Pedestal RMS', 'HcalCalib/Layouts/04 Pedestal RMS by FED', 'HcalCalib/Layouts/05 Pedestal Mean DB Ref', 'HcalCalib/Layouts/06 Pedestal Mean DB Ref by FED', 'HcalCalib/Layouts/07 Pedestal RMS DB Ref', 'HcalCalib/Layouts/08 Pedestal RMS DB Ref by FED', 'HcalCalib/Layouts/09 Pedestal Mean Bad', 'HcalCalib/Layouts/10 Pedestal Mean Bad by FED', 'HcalCalib/Layouts/11 Pedestal RMS Bad', 'HcalCalib/Layouts/12 Pedestal RMS Bad by FED', 'HcalCalib/Layouts/13 Pedestal Missing', 'HcalCalib/Layouts/14 Pedestal Missing by FED', 'HcalCalib/Layouts/15 Pedestal Occupancy vs LS', 'HcalCalib/Layouts/16 Missing vs LS', 'HcalCalib/Layouts/17 Number of Bad Mean vs LS', 'HcalCalib/Layouts/18 Number of Bad RMS vs LS']\n}, {\n  label: 'Castor',\n  foldersPath: ['Castor'],\n  quickCollections: ['Castor/Layouts/01 - Map of frontend and readout errors', 'Castor/Layouts/02 - Channel-wise timing', 'Castor/Layouts/02b - Channel-wise timing (rms)', 'Castor/Layouts/Digi/05 - DigiSize']\n}];\nvar mounsWorkspace = [{\n  label: 'CSC',\n  foldersPath: ['CSC'],\n  quickCollections: ['CSC/Layouts/00 Data Integrity/Physics Efficiency 01', 'CSC/Layouts/00 Data Integrity/Physics Efficiency 02', 'CSC/Layouts/00 Data Integrity/Physics Efficiency 04 - CSCs Reporting Data and Unpacked', 'CSC/Layouts/00 Data Integrity/Physics Efficiency 08 - CSCs Occupancy Overal', 'CSC/Layouts/00 Data Integrity/Physics Efficiency 07 - CSCs Occupancy 2D', 'CSC/Layouts/00 Data Integrity/Physics Efficiency 09 - RecHits Minus', 'CSC/Layouts/00 Data Integrity/Physics Efficiency 10 - RecHits Plus', 'CSC/Layouts/00 Data Integrity/Physics Efficiency 11 - Segments', 'CSC/Layouts/00 Data Integrity/Physics Efficiency 12 - Timing']\n}, {\n  label: 'DT',\n  foldersPath: ['DT'],\n  quickCollections: []\n}, {\n  label: 'RPC',\n  foldersPath: ['RPC'],\n  quickCollections: []\n}, {\n  label: 'GEM',\n  foldersPath: ['GEM'],\n  quickCollections: [\"GEM/Layouts/01 - Efficiency vs Chamber\", \"GEM/Layouts/02 - Efficiency vs Muon PT\", \"GEM/Layouts/03 - Efficiency vs Muon Eta\", \"GEM/Layouts/04 - Resolution Summary\"]\n}];\nvar cttpsWorspace = [{\n  label: 'TrackingStrip',\n  foldersPath: ['CTPPS/TrackingStrip', 'CTPPS/common', 'CTPPS/TrackingStrip/Layouts'],\n  quickCollections: []\n}, {\n  label: 'TrackingPixel',\n  foldersPath: ['CTPPS/TrackingPixel', 'CTPPS/common', 'CTPPS/TrackingPixel/Layouts'],\n  quickCollections: []\n}, {\n  label: 'TimingDiamond',\n  foldersPath: ['CTPPS/TimingDiamond', 'CTPPS/common', 'CTPPS/TimingDiamond/Layouts'],\n  quickCollections: []\n}, {\n  label: 'TimingFastSilicon',\n  foldersPath: ['CTPPS/TimingFastSilicon', 'CTPPS/common', 'CTPPS/TimingFastSilicon/Layouts'],\n  quickCollections: []\n}];\nvar pogWorkspace = [{\n  label: 'Muons',\n  foldersPath: ['Muons'],\n  quickCollections: []\n}, {\n  label: 'JetMet',\n  foldersPath: ['JetMet'],\n  quickCollections: []\n}, {\n  label: 'EGamma',\n  foldersPath: ['Egamma'],\n  quickCollections: []\n}, {\n  label: 'Btag',\n  foldersPath: ['Btag'],\n  quickCollections: ['Btag/Layouts/00 - Jet Property', 'Btag/Layouts/01 - Tracks in Jet', 'Btag/Layouts/02 - Vertex Property', 'Btag/Layouts/03 - Flight Distance Summary', 'Btag/Layouts/04 - Discriminator Summary', 'Btag/Layouts/05 - 2D-Impact Parameter', 'Btag/Layouts/06 - 3D-Impact Parameter', 'Btag/Layouts/07 - ROC Curves']\n}, {\n  label: 'Tracking',\n  foldersPath: ['Tracking', 'AlcaBeamMonitor', 'OfflinePV'],\n  quickCollections: ['Tracking/Layouts/01 - Tracking ReportSummary', 'Tracking/Layouts/02a - Tracks (pp collisions)', 'Tracking/Layouts/02b - Total Hits Strip and Pixel (pp collisions)', 'Tracking/Layouts/03 - Tracks (Cosmic Tracking)', 'Tracking/Layouts/05 - Number of Seeds (pp collisions)', 'Tracking/Layouts/06 - Tracks resolution', 'Tracking/Layouts/06a - Tracks quality', 'Tracking/Layouts/07 - Vertex reconstruction', 'Tracking/Layouts/08 - Tracking Efficiency']\n}, {\n  label: 'Tau',\n  foldersPath: ['RecoTauV'],\n  quickCollections: ['RecoTauV/Layouts/SingleMu/00aa - Fake rate from muons vs pt', 'RecoTauV/Layouts/SingleMu/00ab - Fake rate from muons vs pt', 'RecoTauV/Layouts/SingleMu/01a - Muon rejection fake rate vs pt', 'RecoTauV/Layouts/Jet/00aa - Fake rate from jets vs pt', 'RecoTauV/Layouts/Jet/00ab - Fake rate from jets vs pt', 'RecoTauV/Layouts/DoubleElectron_OR_TauPlusX/00aa - Fake rate from electrons vs pt', 'RecoTauV/Layouts/DoubleElectron_OR_TauPlusX/00ab - Fake rate from electrons vs pt', 'RecoTauV/Layouts/DoubleElectron_OR_TauPlusX/01a - Electron rejection fake rate vs pt', 'RecoTauV/Layouts/SingleMu/00ba - Fake rate from muons vs pileup', 'RecoTauV/Layouts/SingleMu/00bb - Fake rate from muons vs pileup', 'RecoTauV/Layouts/Jet/00ba - Fake rate from jets vs pileup', 'RecoTauV/Layouts/Jet/00bb - Fake rate from jets vs pileup', 'RecoTauV/Layouts/Jet/01e - Distributions of size and sumPt for isolation PF Cands, QCD Jets faking taus', 'RecoTauV/Layouts/Jet/01f - Distributions of Raw Quantities of Tau Cands, QCD Jets faking taus', 'RecoTauV/Layouts/Jet/01g - Distributions of Tau Cands Multiplicity, QCD Jets faking taus', 'RecoTauV/Layouts/Jet/01h - Distributions of Tau Cands pTRatio, QCD Jets faking taus', 'RecoTauV/Layouts/DoubleElectron_OR_TauPlusX/00ba - Fake rate from electrons vs pileup', 'RecoTauV/Layouts/DoubleElectron_OR_TauPlusX/00bb - Fake rate from electrons vs pileup']\n}];\nvar workspaces = [{\n  label: 'Summaries',\n  workspaces: summariesWorkspace\n}, {\n  label: 'Trigger',\n  workspaces: triggerWorkspace\n}, {\n  label: 'Tracker',\n  workspaces: trackerWorkspace\n}, {\n  label: 'Calorimeters',\n  workspaces: calorimetersWorkspace\n}, {\n  label: 'Muons',\n  workspaces: mounsWorkspace\n}, {\n  label: 'CTPPS',\n  workspaces: cttpsWorspace\n}, {\n  label: 'POG',\n  workspaces: pogWorkspace\n}];\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./workspaces/offline.ts\n");

/***/ })

})