webpackHotUpdate_N_E("pages/plotsLocalOverlay",{

/***/ "./plotsLocalOverlay/selectedPlotsTable.tsx":
/*!**************************************************!*\
  !*** ./plotsLocalOverlay/selectedPlotsTable.tsx ***!
  \**************************************************/
/*! exports provided: SelectedPlotsTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectedPlotsTable\", function() { return SelectedPlotsTable; });\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/index.js\");\n/* harmony import */ var _styledComponents__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./styledComponents */ \"./plotsLocalOverlay/styledComponents.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./plotsLocalOverlay/utils.ts\");\n/* harmony import */ var clean_deep__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! clean-deep */ \"./node_modules/clean-deep/src/index.js\");\n/* harmony import */ var clean_deep__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(clean_deep__WEBPACK_IMPORTED_MODULE_5__);\n\n\nvar _this = undefined,\n    _jsxFileName = \"/Users/ernestapetraityte/projects/CERN/dqmgui_frontend/plotsLocalOverlay/selectedPlotsTable.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"];\n\n\n\n\n\n\nvar addToSelectedPlots = function addToSelectedPlots(item, allSelectedPlots) {\n  if (allSelectedPlots.indexOf(item) === -1) {\n    allSelectedPlots.push(item);\n  }\n\n  return allSelectedPlots;\n};\n\nvar removeSelectedPlot = function removeSelectedPlot(item, allSelectedPlots) {\n  var copy = Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(allSelectedPlots);\n\n  var index = copy.indexOf(item);\n  copy.splice(index, 1);\n  return copy;\n};\n\nvar SelectedPlotsTable = function SelectedPlotsTable(_ref) {\n  _s();\n\n  var lastSelectedPlot = _ref.lastSelectedPlot,\n      setSelectedPlots = _ref.setSelectedPlots,\n      selectedPlots = _ref.selectedPlots,\n      query = _ref.query,\n      overlaidGlobally = _ref.overlaidGlobally;\n  var colums = [{\n    title: 'Run',\n    dataIndex: 'run_number'\n  }, {\n    title: 'Dataset name',\n    dataIndex: 'dataset_name'\n  }, {\n    title: 'Path',\n    dataIndex: 'folders_path'\n  }, {\n    title: 'Plot Name',\n    dataIndex: 'plot_name'\n  }, {\n    title: 'Label',\n    // dataIndex: 'label',\n    render: function render(plot) {\n      var set_label = function set_label(_ref2) {\n        var value = _ref2.target.value;\n        var plotsWithLabels = Object(_utils__WEBPACK_IMPORTED_MODULE_4__[\"setLabel\"])(plot, selectedPlots, value);\n        setSelectedPlots(plotsWithLabels);\n      };\n\n      if (plot.folders_path && plot.plot_name) return __jsx(antd__WEBPACK_IMPORTED_MODULE_2__[\"Input\"], {\n        id: plot.folders_path + plot.plot_name,\n        defaultValue: plot.label,\n        name: plot.folders_path + plot.plot_name,\n        placeholder: \"label\",\n        value: plot.label,\n        onChange: set_label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }\n      });\n    }\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: function render(plot) {\n      var isGloballyOverlaid = overlaidGlobally.findIndex(function (globallyOverlaidPlot) {\n        return globallyOverlaidPlot.plot_name === plot.plot_name && globallyOverlaidPlot.folders_path === plot.folders_path && globallyOverlaidPlot.dataset_name === plot.dataset_name && globallyOverlaidPlot.run_number === plot.run_number;\n      });\n      var disabled = isGloballyOverlaid > -1;\n      return __jsx(antd__WEBPACK_IMPORTED_MODULE_2__[\"Space\"], {\n        size: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }\n      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__[\"Tooltip\"], {\n        title: disabled ? 'This plots is overlaid globally in main page, on options section' : '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__[\"Button\"], {\n        type: \"link\",\n        disabled: disabled,\n        onClick: function onClick() {\n          setSelectedPlots(removeSelectedPlot(plot, selectedPlots));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"Delete\")));\n    }\n  }];\n  react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"](function () {\n    if (query.overlayPlots) {\n      var _plots = query.overlayPlots.split('&');\n\n      var formattedSelectedPlotObjects = _plots.map(function (plot) {\n        var labelAndOtherPart = plot.split('reflabel=');\n        var label = labelAndOtherPart.length === 2 ? labelAndOtherPart[1] : '';\n        var parts = labelAndOtherPart[0].split('/');\n        var plot_name = parts.pop();\n        var folders_path = clean_deep__WEBPACK_IMPORTED_MODULE_5___default()(parts).join('/');\n        var finalObject = {\n          folders_path: folders_path,\n          plot_name: plot_name,\n          label: label\n        };\n        return finalObject;\n      });\n\n      setSelectedPlots(formattedSelectedPlotObjects);\n    }\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"](function () {\n    if (!!lastSelectedPlot && lastSelectedPlot.plot_name) {\n      var copy = Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(selectedPlots);\n\n      var changedPlotInfoArray = addToSelectedPlots(lastSelectedPlot, copy);\n      setSelectedPlots(changedPlotInfoArray);\n    }\n  }, [lastSelectedPlot]);\n  react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"](function () {\n    var dataSource = overlaidGlobally.concat(selectedPlots);\n    setSelectedPlots(dataSource);\n  }, [query.overlaidGlobally]);\n  return selectedPlots.length > 0 ? __jsx(_styledComponents__WEBPACK_IMPORTED_MODULE_3__[\"StyledSelectedPlotsTable\"], {\n    pagination: {\n      defaultPageSize: 1,\n      pageSizeOptions: ['1', '2', '3', '4', '5'],\n      showSizeChanger: true\n    },\n    columns: colums,\n    dataSource: selectedPlots,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 38\n    }\n  }) : __jsx(react__WEBPACK_IMPORTED_MODULE_1__[\"Fragment\"], null);\n};\n\n_s(SelectedPlotsTable, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n\n_c = SelectedPlotsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedPlotsTable\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plotsLocalOverlay/selectedPlotsTable.tsx\n");

/***/ })

})